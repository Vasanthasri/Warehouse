{"ast":null,"code":"var _jsxFileName = \"D:\\\\Warehouse\\\\frontend\\\\src\\\\components\\\\ViewGoods.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './ViewGoods.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewGoods() {\n  _s();\n  const [goodsList, setGoodsList] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchGoods = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/goods');\n        // Ensure the response data is in the correct format\n        const formattedData = response.data.map(good => ({\n          name: good.item,\n          // Adjust according to your API response\n          weight: good.weight,\n          expiryDate: good.expiryDate,\n          stockAmount: good.quantity,\n          dateScanned: new Date(good.dateScanned).toLocaleDateString() // Adjust according to your API response\n        }));\n        setGoodsList(formattedData);\n      } catch (err) {\n        console.error('Error fetching goods:', err);\n        setError('Failed to fetch goods');\n      }\n    };\n    fetchGoods();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-goods-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Goods\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"goods-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Item Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weight\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Expiry Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Scanned\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: goodsList.map((good, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(good.expiryDate).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.stockAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: good.dateScanned\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewGoods, \"TEbBg+tbi70A/QoqLtJ39/c0d3M=\");\n_c = ViewGoods;\nexport default ViewGoods;\nvar _c;\n$RefreshReg$(_c, \"ViewGoods\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ViewGoods","_s","goodsList","setGoodsList","error","setError","fetchGoods","response","get","formattedData","data","map","good","name","item","weight","expiryDate","stockAmount","quantity","dateScanned","Date","toLocaleDateString","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","_c","$RefreshReg$"],"sources":["D:/Warehouse/frontend/src/components/ViewGoods.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './ViewGoods.css';\r\n\r\nfunction ViewGoods() {\r\n  const [goodsList, setGoodsList] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchGoods = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/goods');\r\n        // Ensure the response data is in the correct format\r\n        const formattedData = response.data.map(good => ({\r\n          name: good.item,  // Adjust according to your API response\r\n          weight: good.weight,\r\n          expiryDate: good.expiryDate,\r\n          stockAmount: good.quantity,\r\n          dateScanned: new Date(good.dateScanned).toLocaleDateString()  // Adjust according to your API response\r\n        }));\r\n        setGoodsList(formattedData);\r\n      } catch (err) {\r\n        console.error('Error fetching goods:', err);\r\n        setError('Failed to fetch goods');\r\n      }\r\n    };\r\n    fetchGoods();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"view-goods-container\">\r\n      <h2>Available Goods</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      <table className=\"goods-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Item Name</th>\r\n            <th>Weight</th>\r\n            <th>Expiry Date</th>\r\n            <th>Quantity</th>\r\n            <th>Date Scanned</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {goodsList.map((good, index) => (\r\n            <tr key={index}>\r\n              <td>{good.name}</td>\r\n              <td>{good.weight}</td>\r\n              <td>{new Date(good.expiryDate).toLocaleDateString()}</td>\r\n              <td>{good.stockAmount}</td>\r\n              <td>{good.dateScanned}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewGoods;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}